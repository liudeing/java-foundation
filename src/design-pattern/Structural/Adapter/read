适配器模式：将两个不兼容的类纠合在一起使用，属于结构型模式，需要有Adaptee(被适配者)和Adapter(适配器)两个身份。
为何使用？我们经常需要将两个没有关系的类组合在一起使用，第一种解决方案是，修改各自的类接口，但如果我们没有源代码，或者，我们不愿意为一个应用修改
各自的接口，这时候就可以创建一个Adapter，在两个接口中创建一个混合接口。
实现Adapter，就是“think in java”中的类再生，有两种方式，组合（composition）和继承（inheritance）.

还有一种叫Pluggable Adapters,可以动态的获取几个adapters中一个。使用Reflection技术，可以动态的发现类中的Public方法。