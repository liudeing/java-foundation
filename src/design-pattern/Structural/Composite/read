组合模式：将对象以树形结构组织起来，以达成“部分一整体”的层次结构，使得客户端对单个对象和组合对象使用具有一致性。
Composite,想到树型结构图。组合体内的这些对象都有共同的接口，当组合体一个对象的方法被调用时，Composite将遍历（Iterator）整个树形结构，寻找
同样包含这个方法的对象并实现调用执行。可以用牵一动百来形容。
所以Composite模式使用到Iterator模式，和Chain of Responsibility模式类似。
使用Composite的好处：
1,使客户端调用简单，客户端可以一致的使用组合结构或其中的单个对象，用户就不必关系自己处理的是单个对象还是组合结构，这就简化了客户端代码。
2,更容易在组合体内部加入结构部件，客户端不必因为加入了新的对象部件而更新代码。
如何使用Composite?
首先定义一个接口或抽象类，这是设计模式的通用方式了，其他设计模式对接口内部定义限制不多，但组合模式规定，那就是要在接口内部定义一个用于访问的管理
Composite组合体的对象们（或称部件Component).

在实际应用中，如果碰到树形结构，我们就可以尝试是否可以使用这个模式。

以论坛为例，一个版(forum)中有很多帖子(message),这些帖子有原始贴，有对原始贴的回应贴，是个典型的树形结构，那么当然可以使用Composite模式