建造者模式：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示
Builder模式是一步一步创建一个复杂对象，它允许用户可以通过指定复杂对象的类型和内容就可以构建它们。用户不知道内部的具体构建细节。Builder模式非
常类似抽象工厂模式。
目的是将构建复杂对象的过程和它的部件解耦，即是解耦过程和部件。

Builder模式的应用
在Java实际使用中,我们经常用到"池"(Pool)的概念,当资源提供者无法提供足够的资源,并且这些资源需要被很多用户反复共享时,就需要使用池.

"池"实际是一段内存,当池中有一些复杂的资源的"断肢"(比如数据库的连接池,也许有时一个连接会中断),如果循环再利用这些"断肢",将提高内存使用效率,提高
池的性能.修改Builder模式中Director类使之能诊断"断肢"断在哪个部件上,再修复这个部件.